=========================
How to use add_integer.py
=========================
Only one function called 'add_integer()'

Import module
=============
>>> add_integer = __import__('0-add_integer').add_integer

Return
======
'add_integer()' returns the addition of its arguments.

Tests add integer
=================
>>> add_integer(2, 98)
100
>>> add_integer(-2, 98)
96
>>> add_integer(2, -98)
-96
>>> add_integer(0, 98)
98
>>> add_integer(2)
100
>>> add_integer(2.2, 98)
100
>>> add_integer(2, 98.8)
100
>>> add_integer(2.2, 98.8)
100

Tests errors
============
    - Test case "string"
>>> add_integer("Hello", 98)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, "World")
Traceback (most recent call last):
TypeError: b must be an integer

    - Test case "tuple"
>>> add_integer((0, 2), 98)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, (98, 100))
Traceback (most recent call last):
TypeError: b must be an integer

    - Test case "list"
>>> add_integer([0, 2], 98)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, [98, 100])
Traceback (most recent call last):
TypeError: b must be an integer

    - Test case "None"
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2, None)
Traceback (most recent call last):
TypeError: b must be an integer